To achieve this, you'll need to continuously monitor the temperature and humidity readings from the Sense-HAT emulator. Below is a Python script demonstrating how to accomplish this task:

```python
import time
from sense_hat import SenseHat

# Initialize the Sense HAT emulator
sense = SenseHat()

# Define the temperature and humidity thresholds
TEMP_THRESHOLD = 40  # Threshold temperature in Celsius
HUMIDITY_THRESHOLD = 90  # Threshold humidity in percentage

# Function to check for warnings and update the web interface and Sense emulator
def check_and_display_warning():
    # Get current temperature and humidity readings
    temperature = sense.get_temperature()
    humidity = sense.get_humidity()

    # Check if temperature or humidity exceeds thresholds
    if temperature > TEMP_THRESHOLD or humidity > HUMIDITY_THRESHOLD:
        # Construct the warning message
        warning_message = "WARNING: "

        if temperature > TEMP_THRESHOLD:
            warning_message += f"Temperature ({temperature:.2f}°C) exceeds {TEMP_THRESHOLD}°C. "
        if humidity > HUMIDITY_THRESHOLD:
            warning_message += f"Humidity ({humidity:.2f}%) exceeds {HUMIDITY_THRESHOLD}%. "
        
        # Display warning message on the web interface (replace this with your implementation)
        update_warning_message_on_web(warning_message)

        # Display warning message on the Sense emulator
        sense.show_message(warning_message, text_colour=[255, 0, 0])  # Red text

    else:
        # No warning, clear any existing messages on the Sense emulator
        sense.clear()
        

# Function to update warning message on the web interface (replace this with your implementation)
def update_warning_message_on_web(warning_message):
    print("Updating warning message on the web interface:", warning_message)


# Main loop to continuously monitor and display warnings
try:
    while True:
        check_and_display_warning()
        # Wait for a certain interval before checking again
        time.sleep(10)  # Adjust this interval as needed
except KeyboardInterrupt:
    # Handle Ctrl+C to gracefully exit the loop
    pass
```

In this script:

- We initialize the Sense HAT emulator and define the temperature and humidity thresholds.
- The `check_and_display_warning` function continuously retrieves temperature and humidity readings from the Sense-HAT emulator and checks if they exceed the predefined thresholds. If a threshold is exceeded, it constructs a warning message and displays it both on the web interface (using a placeholder function `update_warning_message_on_web`) and on the Sense emulator.
- The `update_warning_message_on_web` function is a placeholder for updating the warning message on the web interface. You should replace it with your implementation to update the warning message dynamically on your web interface.
- The main loop continuously calls the `check_and_display_warning` function with a certain interval (e.g., every 10 seconds). You can adjust this interval based on your requirements.
- The script can be interrupted by pressing Ctrl+C to gracefully exit the loop.

You'll need to integrate this script into your project along with the web interface implementation to achieve the desired functionality.